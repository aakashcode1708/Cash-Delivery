[{"/home/aakash/Cash&Delivery/frontend/src/index.js":"1","/home/aakash/Cash&Delivery/frontend/src/reportWebVitals.js":"2","/home/aakash/Cash&Delivery/frontend/src/App.js":"3","/home/aakash/Cash&Delivery/frontend/src/components/Header.js":"4","/home/aakash/Cash&Delivery/frontend/src/components/Footer.js":"5","/home/aakash/Cash&Delivery/frontend/src/pages/HomePage.js":"6","/home/aakash/Cash&Delivery/frontend/src/components/Product.js":"7","/home/aakash/Cash&Delivery/frontend/src/components/Rating.js":"8","/home/aakash/Cash&Delivery/frontend/src/pages/ProductPage.js":"9","/home/aakash/Cash&Delivery/frontend/src/store.js":"10","/home/aakash/Cash&Delivery/frontend/src/reducers/productReducers.js":"11","/home/aakash/Cash&Delivery/frontend/src/constants/productConstants.js":"12","/home/aakash/Cash&Delivery/frontend/src/actions/productActions.js":"13","/home/aakash/Cash&Delivery/frontend/src/components/Message.js":"14","/home/aakash/Cash&Delivery/frontend/src/components/Loader.js":"15","/home/aakash/Cash&Delivery/frontend/src/pages/CartPages.js":"16","/home/aakash/Cash&Delivery/frontend/src/reducers/cartReducers.js":"17","/home/aakash/Cash&Delivery/frontend/src/constants/cartConstants.js":"18","/home/aakash/Cash&Delivery/frontend/src/actions/cartActions.js":"19","/home/aakash/Cash&Delivery/frontend/src/reducers/userReducers.js":"20","/home/aakash/Cash&Delivery/frontend/src/constants/userConstants.js":"21","/home/aakash/Cash&Delivery/frontend/src/pages/LoginPage.js":"22","/home/aakash/Cash&Delivery/frontend/src/components/FormContainer.js":"23","/home/aakash/Cash&Delivery/frontend/src/actions/userActions.js":"24","/home/aakash/Cash&Delivery/frontend/src/pages/RegisterPage.js":"25","/home/aakash/Cash&Delivery/frontend/src/pages/ProfilePage.js":"26","/home/aakash/Cash&Delivery/frontend/src/pages/ShippingPage.js":"27","/home/aakash/Cash&Delivery/frontend/src/components/CheckOutSteps.js":"28","/home/aakash/Cash&Delivery/frontend/src/pages/PaymentPage.js":"29","/home/aakash/Cash&Delivery/frontend/src/pages/PlaceOrderScreen.js":"30","/home/aakash/Cash&Delivery/frontend/src/reducers/orderReducers.js":"31","/home/aakash/Cash&Delivery/frontend/src/constants/orderConstants.js":"32","/home/aakash/Cash&Delivery/frontend/src/actions/orderActions.js":"33","/home/aakash/Cash&Delivery/frontend/src/pages/OrderPage.jsx":"34"},{"size":597,"mtime":1629029997798,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1628957959379,"results":"37","hashOfConfig":"36"},{"size":1707,"mtime":1629216273923,"results":"38","hashOfConfig":"36"},{"size":1801,"mtime":1629084279505,"results":"39","hashOfConfig":"36"},{"size":322,"mtime":1628959860629,"results":"40","hashOfConfig":"36"},{"size":1021,"mtime":1629033509519,"results":"41","hashOfConfig":"36"},{"size":808,"mtime":1628998048042,"results":"42","hashOfConfig":"36"},{"size":1368,"mtime":1628996763500,"results":"43","hashOfConfig":"36"},{"size":3687,"mtime":1629039463194,"results":"44","hashOfConfig":"36"},{"size":1713,"mtime":1629270024927,"results":"45","hashOfConfig":"36"},{"size":1001,"mtime":1629033928617,"results":"46","hashOfConfig":"36"},{"size":367,"mtime":1629033714306,"results":"47","hashOfConfig":"36"},{"size":1167,"mtime":1629034163164,"results":"48","hashOfConfig":"36"},{"size":241,"mtime":1629033385640,"results":"49","hashOfConfig":"36"},{"size":388,"mtime":1629039556744,"results":"50","hashOfConfig":"36"},{"size":3431,"mtime":1629043040755,"results":"51","hashOfConfig":"36"},{"size":1133,"mtime":1629097091566,"results":"52","hashOfConfig":"36"},{"size":235,"mtime":1629096869503,"results":"53","hashOfConfig":"36"},{"size":1214,"mtime":1629096989194,"results":"54","hashOfConfig":"36"},{"size":2018,"mtime":1629272396456,"results":"55","hashOfConfig":"36"},{"size":903,"mtime":1629272314208,"results":"56","hashOfConfig":"36"},{"size":2134,"mtime":1629086381839,"results":"57","hashOfConfig":"36"},{"size":335,"mtime":1629052976882,"results":"58","hashOfConfig":"36"},{"size":3591,"mtime":1629272577881,"results":"59","hashOfConfig":"36"},{"size":3145,"mtime":1629086372719,"results":"60","hashOfConfig":"36"},{"size":5214,"mtime":1629271926853,"results":"61","hashOfConfig":"36"},{"size":2521,"mtime":1629095994838,"results":"62","hashOfConfig":"36"},{"size":1246,"mtime":1629096049237,"results":"63","hashOfConfig":"36"},{"size":2022,"mtime":1629097358812,"results":"64","hashOfConfig":"36"},{"size":4878,"mtime":1629130438772,"results":"65","hashOfConfig":"36"},{"size":2259,"mtime":1629272244796,"results":"66","hashOfConfig":"36"},{"size":770,"mtime":1629272284504,"results":"67","hashOfConfig":"36"},{"size":3221,"mtime":1629270308580,"results":"68","hashOfConfig":"36"},{"size":6645,"mtime":1629263934509,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"v9395t",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},"/home/aakash/Cash&Delivery/frontend/src/index.js",[],["144","145"],"/home/aakash/Cash&Delivery/frontend/src/reportWebVitals.js",[],"/home/aakash/Cash&Delivery/frontend/src/App.js",[],"/home/aakash/Cash&Delivery/frontend/src/components/Header.js",[],"/home/aakash/Cash&Delivery/frontend/src/components/Footer.js",[],"/home/aakash/Cash&Delivery/frontend/src/pages/HomePage.js",[],"/home/aakash/Cash&Delivery/frontend/src/components/Product.js",[],"/home/aakash/Cash&Delivery/frontend/src/components/Rating.js",[],"/home/aakash/Cash&Delivery/frontend/src/pages/ProductPage.js",[],"/home/aakash/Cash&Delivery/frontend/src/store.js",[],"/home/aakash/Cash&Delivery/frontend/src/reducers/productReducers.js",[],"/home/aakash/Cash&Delivery/frontend/src/constants/productConstants.js",[],"/home/aakash/Cash&Delivery/frontend/src/actions/productActions.js",[],"/home/aakash/Cash&Delivery/frontend/src/components/Message.js",[],"/home/aakash/Cash&Delivery/frontend/src/components/Loader.js",[],"/home/aakash/Cash&Delivery/frontend/src/pages/CartPages.js",[],"/home/aakash/Cash&Delivery/frontend/src/reducers/cartReducers.js",[],"/home/aakash/Cash&Delivery/frontend/src/constants/cartConstants.js",[],"/home/aakash/Cash&Delivery/frontend/src/actions/cartActions.js",[],"/home/aakash/Cash&Delivery/frontend/src/reducers/userReducers.js",["146"],"import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n  USER_DETAILS_RESET,\n} from \"../constants/userConstants\";\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload };\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_DETAILS_RESET:\n      return {\n        user: {},\n      };\n    default:\n      return state;\n  }\n};\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload };\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","/home/aakash/Cash&Delivery/frontend/src/constants/userConstants.js",[],"/home/aakash/Cash&Delivery/frontend/src/pages/LoginPage.js",[],"/home/aakash/Cash&Delivery/frontend/src/components/FormContainer.js",[],"/home/aakash/Cash&Delivery/frontend/src/actions/userActions.js",[],"/home/aakash/Cash&Delivery/frontend/src/pages/RegisterPage.js",[],"/home/aakash/Cash&Delivery/frontend/src/pages/ProfilePage.js",["147"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { listOrders } from \"../actions/orderActions\";\nimport { USER_LOGIN_FAIL } from \"../constants/userConstants\";\nconst ProfilePage = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n  const orderList = useSelector((state) => state.orderList);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderList;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Please check confirmed Password\");\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {success && (\n          <Message variant=\"success\">Profile has been updated</Message>\n        )}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"confirmpassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Button type=\"submit\" variant=\"primary\">\n            Update Profile\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>Orders Section</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\"></Message>\n        ) : (\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>Order Id</th>\n                <th>Ordered On</th>\n                <th>Order Amount</th>\n                <th>Payment Status</th>\n                <th>Delivery Status</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice} Rs.</td>\n                  <td>\n                    {order.isPaid\n                      ? order.paidAt.substring(0, 10)\n                      : \"Payment Pending\"}\n                  </td>\n                  <td>\n                    {order.isDelivered\n                      ? order.deliveredAt.substring(0, 10)\n                      : \"Not Delivered\"}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button variant=\"dark\">Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfilePage;\n","/home/aakash/Cash&Delivery/frontend/src/pages/ShippingPage.js",[],"/home/aakash/Cash&Delivery/frontend/src/components/CheckOutSteps.js",[],"/home/aakash/Cash&Delivery/frontend/src/pages/PaymentPage.js",[],"/home/aakash/Cash&Delivery/frontend/src/pages/PlaceOrderScreen.js",["148","149"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport CheckOutSteps from \"../components/CheckOutSteps\";\nimport { Link } from \"react-router-dom\";\nimport { createOrder } from \"../actions/orderActions\";\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n  cart.itemsPrice = cart.cartItems.reduce(\n    (acc, item) => acc + item.price * item.qty,\n    0\n  );\n  cart.shippingPrice = cart.itemsPrice > 399 ? 0 : 99;\n  cart.taxPrice = Number(0.01 * cart.itemsPrice);\n  cart.totalPrice =\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice);\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n  }, [history, success]);\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n  return (\n    <React.Fragment>\n      <CheckOutSteps step1 step2 step3 step4></CheckOutSteps>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address},{cart.shippingAddress.city},\n                {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems === 0 ? (\n                <Message>Your Cart Is Empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.image}\n                            fluid\n                            rounded\n                          ></Image>\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x Rs. {item.price}=Rs.\n                          {item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>Rs. {cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>Rs. {cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>Rs. {cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Price</Col>\n                  <Col>Rs. {cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceOrderScreen;\n","/home/aakash/Cash&Delivery/frontend/src/reducers/orderReducers.js",[],"/home/aakash/Cash&Delivery/frontend/src/constants/orderConstants.js",[],"/home/aakash/Cash&Delivery/frontend/src/actions/orderActions.js",["150"],"import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n} from \"../constants/orderConstants\";\nimport axios from \"axios\";\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const payOrder =\n  (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_PAY_REQUEST,\n      });\n      const {\n        userLogin: { userInfo },\n      } = getState();\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/orders/${orderId}/pay`,\n        paymentResult,\n        config\n      );\n      dispatch({\n        type: ORDER_PAY_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_PAY_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","/home/aakash/Cash&Delivery/frontend/src/pages/OrderPage.jsx",["151"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { Link } from \"react-router-dom\";\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\nimport { ORDER_PAY_RESET } from \"../constants/orderConstants\";\nconst OrderPage = ({ match }) => {\n  const orderId = match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const dispatch = useDispatch();\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  if (!loading) {\n    order.itemsPrice = order.orderItems.reduce(\n      (acc, item) => acc + item.price * item.qty,\n      0\n    );\n  }\n\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (!order || successPay) {\n      dispatch({type:ORDER_PAY_RESET})\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, order]);\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <React.Fragment>\n      <h1>Order No. {order._id}</h1>\n      <React.Fragment>\n        <Row>\n          <Col md={8}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Shipping</h2>\n                <p>\n                  <strong>Name: </strong> <b>{order.user.name}</b>\n                </p>\n                <p>\n                  <strong>Email: </strong>{\" \"}\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                </p>\n                <p>\n                  <strong>Address:</strong>\n                  {order.shippingAddress.address},{order.shippingAddress.city},\n                  {order.shippingAddress.postalCode},\n                  {order.shippingAddress.country}\n                </p>\n                {order.isDelivered ? (\n                  <Message variant=\"success\">\n                    {\" \"}\n                    Delivered On {order.deliveredAt}\n                  </Message>\n                ) : (\n                  <Message variant=\"danger\">Not Delivered </Message>\n                )}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <h2>Payment Method</h2>\n                <p>\n                  <strong>Method: </strong>\n                  {order.paymentMethod}\n                </p>\n                {order.isPaid ? (\n                  <Message variant=\"success\"> Paid On {order.paidAt}</Message>\n                ) : (\n                  <Message variant=\"danger\">Not Paid</Message>\n                )}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <h2>Order Items</h2>\n                {order.orderItems.length === 0 ? (\n                  <Message>Order Is Empty</Message>\n                ) : (\n                  <ListGroup variant=\"flush\">\n                    {order.orderItems.map((item, index) => (\n                      <ListGroup.Item key={index}>\n                        <Row>\n                          <Col md={1}>\n                            <Image\n                              src={item.image}\n                              alt={item.image}\n                              fluid\n                              rounded\n                            ></Image>\n                          </Col>\n                          <Col>\n                            <Link to={`/product/${item.product}`}>\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <Col md={4}>\n                            {item.qty} x Rs. {item.price}=Rs.\n                            {item.qty * item.price}\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                )}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={4}>\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Order Summary</h2>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>Rs. {order.itemsPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Shipping</Col>\n                    <Col>Rs. {order.shippingPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>Rs. {order.taxPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price</Col>\n                    <Col>Rs. {order.totalPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  {!order.isPaid && (\n                    <ListGroup.Item>\n                      {loadingPay && <Loader />}\n                      {!sdkReady ? (\n                        <Loader />\n                      ) : (\n                        <PayPalButton\n                          amount={order.totalPrice}\n                          onSuccess={successPaymentHandler}\n                        />\n                      )}\n                    </ListGroup.Item>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      </React.Fragment>\n    </React.Fragment>\n  );\n};\n\nexport default OrderPage;\n",{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":15,"column":3,"nodeType":"158","messageId":"159","endLine":15,"endColumn":28},{"ruleId":"156","severity":1,"message":"160","line":9,"column":10,"nodeType":"158","messageId":"159","endLine":9,"endColumn":25},{"ruleId":"156","severity":1,"message":"161","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":28,"column":6,"nodeType":"164","endLine":28,"endColumn":24,"suggestions":"165"},{"ruleId":"156","severity":1,"message":"166","line":11,"column":3,"nodeType":"158","messageId":"159","endLine":11,"endColumn":18},{"ruleId":"156","severity":1,"message":"167","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":16},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'USER_UPDATE_PROFILE_RESET' is defined but never used.","Identifier","unusedVar","'USER_LOGIN_FAIL' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["170"],"'ORDER_PAY_RESET' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},"Update the dependencies array to be: [history, order._id, success]",{"range":"173","text":"174"},[1036,1054],"[history, order._id, success]"]